Operations = ["size", 
"append 2",
"append 4", 
"append 5",
"size",
"append 2",
"size",
"pop",
"size",]
            

select
f.title,
f.description
from film f 
join 
(select film_id from film_category fc join category c on fc.category_id=c.category_id where c.name= 'action') fi
on f.film_id=fi.film_id

insert into actor (actor_id,
   first_name,
   last_name,
   last_update)
values (1, 'PENELOPE', 'GUINESS', '2006-02-15 12:34:33');

sc = "How many eggs are in a half-dozen, 13?"


sc = "How many eggs are in a half-dozen, 13? 14"


def howMany(sentence):
    wordlist= sentence.split()
    print(wordlist)
    for i in wordlist:
        try:
            m=int(i)
            if m is not None:
                wordlist.remove(i)
        except ValueError:
            pass;
    return len(wordlist)    
        
            
print(howMany(sc))


    
def howMany(sentence):
    
    wordList1 = sentence.split()
    print(wordList1)
    wordList2 =[]
    cleanWord = ""
    for word in wordList1:
        if word != " ":
            for char in word:
                if char in '!,.?":;0123456789':
                    char = " "
                cleanWord += char
                print(cleanWord)
            wordList2.append(cleanWord)
    return wordList2
    
    
    print(wordlist2)
    return len(wordlist2)    


sc = "How many eggs are in a half-dozen, 13? 14"

    
sc = "How many eggs are in a half-dozen, 13? 14"

    
sc = "How many eggs are in a half-dozen, 13? 14"
sc1 ="he is a good programmer, he won 865 competitions, but sometimes he dont. What do you think? All test-cases should pass. Done-done?"

    
def howMany(sentence):
    punc = '''!()[]{};:'"\,<>./?@#$%^&*_~1234567890'''
    sentence_no_punc = ""
    for char in sentence:
        if char not in punc:
            sentence_no_punc += char
    print(sentence_no_punc)
    wordlist = sentence_no_punc.split()
    #print(wordlist)
    return len(wordlist)    
        
print(howMany(sc1))
        

CREATE VIEW 
actor_name_view(first_name_v，last_name_v) 
AS SELECT 
first_name，
last_name 
FROM actor;

delete from titles_test
where id not in
(select min(id)
from titles_test
group by emp_no)

select first_name
from (
select first_name,
row_number() over(order by first_name) as rn
from employees) a
where a.rn % 2 <> 0
order by rn 


put /repos/memolaze/Exciting/contents/txt/test.txt